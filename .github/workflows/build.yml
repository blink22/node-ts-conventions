name: SonarQube Analysis
on: [push, pull_request]
jobs:
  build:
    name: RUN
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      
      - name: Install Dependencies
        run: npm install
      
      - name: Sonar Scan
        run: |
          SONAR_URL=${{ secrets.SONAR_HOST_URL }} SONAR_LOGIN=${{ secrets.SONAR_TOKEN }} npm run sonarqube
          ls .scannerwork

      # - name: Sonar Scan
      #   uses: sonarsource/sonarqube-scan-action@master
      #   with:
      #     args: >
      #       -Dsonar.projectKey=node-ts-conventions
      #       -Dsonar.projectVersion=1.0.0
      #       -Dsonar.sourceEncoding=UTF-8
      #       -Dsonar.links.scm=https://github.com/blink22/node-ts-conventions/
      #       -Dsonar.sources=src
      #       -Dsonar.tests=tests
      #       -Dsonar.exclusions=**/tests/*.*
      #       -Dsonar.test.inclusions=**/*.test.*
      #       -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      #       -Dsonar.testExecutionReportPaths=test-report.xml
      #       -Dsonar.coverage.exclusions=**/*.spec.js,**/*.spec.ts,**/*.mock.js,**/*.mock.ts,node_modules/*,coverage/lcov-report/*
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      - name: Sonar Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
